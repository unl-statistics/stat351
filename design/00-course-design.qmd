---
title: "Backward Design Template"
format: pdf
---

Statistical Computing II: Data Management and Visualization

Computational skills for management, visualization and analysis of large and complex data which are necessary for modern statistics. Includes a wide range of topics necessary for data analytics, including harvesting data from websites and common data structures, setting up and working with databases, and designing interactive data displays.


# Stage 1: Desired Results

## Established Goals
<!-- The enduring understandings and learning goals of the lesson, unit, or course. -->

- Access and leverage data stored in formats which are commonly used outside of statistics (HTML, JSON, XML, PDF, APIs) and transform these data to formats which are used for statistical analysis. 
	- Scrape data off of the internet and assemble it into a "tidy" format for visualization and analysis.
	- Read in structured data from record-based formats (XML, JSON) and transform this data to a table-based format.
	- Use optical character recognition and other tools to extract data from a PDF file systematically.
	- Use an API to request data from an online service.
	- Implement data cleaning and quality control measures to ensure that data is read in correctly.
	
- Develop skills for visualization and communication of complex data using interactive graphics. You will be able to 
	- Determine when an interactive chart is preferable to a static chart.
	- Create an interactive chart using JavaScript-based tools such as Plotly, Observable.js, or Shiny.
	- Integrate your interactive chart into a report or web page, along with supportive text describing the chart and important findings.
	
- Understand and leverage data management tools for storing and manipulating data, including
	- Identifying situations where an external database is preferable to working with data in-memory.
	- Accessing data in an external SQL, Parquet, or Arrow database.
	- Discussing the tradeoffs between different tools for data management and different approaches to data storage.
	- Design an analysis strategy for large data which does not fit into computer memory by selecting from strategies such as sampling and split-apply-combine. 

## Transfer
<!-- Refers to how students will transfer the knowledge gained from the lesson, unit, or course and apply it outside of the context of the course. -->

- Create interactive graphics to support business or academic data analysis and presentation tasks.
- Use public data for statistical analysis by acquiring the data from the web. 
- Use data stored in relational databases to conduct statistical analyses. 

## Meaning
### Understandings
<!-- Refers to the big ideas and specific understandings students will have when the complete the lesson, unit, or course. -->
Students will understand:

- relational data structures, keys, and joins
- the difference between record-based and variable-based data formats, and how to convert between them
- how programmatic requests can be used to acquire data from APIs 
- types of interactivity in interactive graphics
- when interactive graphics are preferable to static graphics (and vice versa)
- use of JavaScript-based tools to create interactive web graphics
- strategies for working with "big" data and the costs and benefits of different strategies


### Essential Questions
<!-- Refers to the provocative questions that foster inquiry, understanding, and transfer of learning. These questions typically frame the lesson, unit, or course and are often revisited. If students attain the established goals, they should be able to answer the essential question(s). -->

- How do I acquire the data?
    - What form is it in?
    - How is it stored and displayed currently?
    - What steps need to be taken to download the data ethically?
    - What steps need to be taken to post-process the data to get it into readable form?
- What steps are required to take raw data and transform it to tidy data?
- What is the appropriate method for storing my data?
    - What steps are required to get the stored data to analysis-ready format?
    - What computer and time limitations exist? 
- How do I best represent this data in order to convey important information to my audience? 
    - What level of interactivity is best?
    - What supportive information needs to be provided?
    - How do I ensure that this data is accessible to the audience?


## Acquisition
### Knowledge
<!-- Refers to the key knowledge students will acquire from the lesson, unit, or course. -->
- structure of HTML and XML, JSON, and other web data formats
- difference between raw HTML, javascript injection, and other methods of rendering a webpage that affect strategies for web scraping
- API function and essentials of web requests (minimal, but important)
- conceptual basics of how optical character recognition (OCR) works and where it is likely to fail
- identification of record-based data storage, tabular data, and linked-table database structures
- computer memory, processing power, and hard-drive storage limitations for data analysis
- accessibility requirements for web-based data representations
- SQL table manipulation concepts and basic commands

### Skills
<!-- Refers to the key skills students will acquire from the lesson, unit, or course. -->
- use of `purrr` and functional programming
- creation of graphics using Shiny, plotly, and JavaScript toolkits
- SQL table manipulation
- use of OCR and other data pre-processing strategies
- web scraping techniques
- making API calls

# Stage 2: Evidence and Assessment

## Evaluation Criteria
<!-- Refers to the various types of criteria that students will be evaluated on. -->
## Assessment Evidence

### Performance Tasks
<!-- Refers to the authentic performance task(s) that students will complete to demonstrate the desired understandings or demonstrate they have attained the goals. The performance task(s) are typically larger assessments that coalesce various concepts and understandings like large projects or papers. -->

### Other Evidence
<!-- Refers to other types of evidence that will show if students have demonstrated achievement of the desired results. This includes quizzes, tests, homework, etc. This is also a good point to consider incorporating self-assessments and student reflections. -->


# Stage 3: Learning Plan
<!-- This stage encompasses the individual learning activities and instructional strategies that will be employed. This includes lectures, discussions, problem-solving sessions, etc. -->