---
pdf-engine: lualatex
from: markdown+emoji
fontsize: 11pt
geometry: margin=1in
number-sections: true
number-depth: 3
format:
  html:
    keep-tex: false
    template-partials:
    - partials/title-block.html
  pdf:
    keep-tex: false
    template-partials:
    - partials/title.tex
    - partials/before-body.tex
    - partials/graphics.tex
    dev: cairo_pdf
title: Syllabus - Stat 351 
instructor: Susan Vanderplas
semester: Fall 2025
email: susan.vanderplas@unl.edu
web: srvanderplas.github.io
officehours: "[Schedule here](https://calendly.com/vanderplas/office-hours)"
office: Hardin 343D
classroom: KEIM 214
classhours: TR 11:00-12:15
---

```{r setup, include=FALSE}
# knitr::opts_chunk$set(cache=FALSE, dev='pdf')
knitr::opts_chunk$set(cache=F,
                      fig.path = 'images/',
                      cache.path='cache/',
                      warning=F,
                      message=F)

knitr::opts_chunk$set(
                  fig.process = function(x) {
                      x2 = sub('-\\d+([.][a-z]+)$', '\\1', x)
                      if (file.rename(x, x2)) x2 else x
                      }
                  )
source("schedule.R")
```

# Course Description

Computational skills for management, visualization and analysis of large and complex data which are necessary for modern statistics. Includes a wide range of topics necessary for data analytics, including harvesting data from websites and common data structures, setting up and working with databases, and designing interactive data displays.

# Course Objectives

- Access and leverage data stored in formats which are commonly used outside of statistics (HTML, JSON, XML, PDF, APIs) and transform these data to formats which are used for statistical analysis. 
	- Scrape data off of the internet and assemble it into a "tidy" format for visualization and analysis.
	- Read in structured data from record-based formats (XML, JSON) and transform this data to a table-based format.
	- Use optical character recognition and other tools to extract data from a PDF file systematically.
	- Use an API to request data from an online service.
	- Implement data cleaning and quality control measures to ensure that data is read in correctly.
	
- Develop skills for visualization and communication of complex data using interactive graphics. You will be able to 
	- Determine when an interactive chart is preferable to a static chart.
	- Create an interactive chart using JavaScript-based tools such as Plotly, Observable.js, or Shiny.
	- Integrate your interactive chart into a report or web page, along with supportive text describing the chart and important findings.
	
- Understand and leverage data management tools for storing and manipulating data, including
	- Identifying situations where an external database is preferable to working with data in-memory.
	- Accessing data in an external SQL, Parquet, or Arrow database.
	- Discussing the tradeoffs between different tools for data management and different approaches to data storage.
	- Design an analysis strategy for large data which does not fit into computer memory by selecting from strategies such as sampling and split-apply-combine. 

# Class Schedule & Topic Outline

This schedule is **tentative** and **subject to change**. Students are expected to complete assigned reading materials **before coming to class**. 

\FloatBarrier

```{r calendar}
#| echo: false
#| eval: true
#| warning: false
#| fig-width: 8
#| fig-height: 4
#| fig-align: center
#| fig-cap: "Course Calendar"
#| fig-pos: ht

class_cal
```

\small

```{r schedule, eval = T, echo = F, fig.pos = 'h'}
schedule %>% 
kableExtra::kable(caption = "Tentative schedule of class topics", format = "simple")
```

\normalsize

\FloatBarrier
\clearpage

# Course Policies

## Assessment/Grading

| Assignments                    | Weight |
|--------------------------------|--------|
| Reading Quizzes                | 10%    |
| Participation                  |  5%    |
| Homework                       | 45%    |
| Project                        | 20%    |
| Presentation                   | 20%    |

Lower bounds for grade cutoffs are shown in the following table. 

| Letter grade | X +    | X    | X -  |
|--------------|--------|------|------|
| A            | 96.5   | 93.5 | 89.5 |
| B            | 86.5   | 83.5 | 79.5 |
| C            | 76.5   | 73.5 | 69.5 |
| D            | 66.5   | 63.5 | 60.5 |
| F            | \<60.5 |      |      |

Interpretation: 
A grade of 84.3 will receive a B. 
A grade of 79.49 will receive a C+. 
A grade of 73.49 will receive a C-. 
Anything below a 60.5 will receive an F.

## Course Components

### Reading Quizzes

You will have weekly reading assignments which introduce the weekly focus area and provide different perspectives on the material. 
Some of these perspectives will be covered in class lectures and activities, but some will not and are provided to expose you to different approaches and opinions.

In order to motivate the importance of doing the weekly reading before class, you will be given a weekly reading quiz on Canvas which covers the requisite material. 
These quizzes will be due just before the first class of the week.

### Homework/Lab Assignments

Weekly formative assignments (assignments meant to help you practice skills) will be given throughout the semester. 

-   You will typically have one week to work on each of the assignments.

-   Assignments must be submitted in the file format specified, and should run or compile as submitted for credit to be given.

-   I will attempt to grade formative assignments within a week of the specified due date.

-   The assignment due date in Canvas will be set to at least 48 hours before the hard deadline for assignment submission. This provides an implicit "grace period" for assignment submission. No additional extensions will be provided. 

#### Late Work Policy

Late assignments will be accepted only under extenuating circumstances, and only if you have contacted me **prior** to the assignment due date and received permission to hand the assignment in late. 
I reserve the right not to grade (or to assign a 0 to) any assignments received after the assignment due date without prior approval.

### Attendance & Participation

All students are expected to attend and fully participate in class. 
Participation grades will be determined based on a combination of attendance and participation.
Consistent, repeated failure to attend class or actively participate in the course will affect the participation portion of your grade.

One absence is allowed without any reduction in participation score - no excuse is necessary!

#### Illness

If you are feeling ill, please **do not come to class**. 
Instead, review the material and work on the homework/lab assignment, and then schedule an appointment with me to meet virtually within a week of your absence. 
In the appointment reason field on Calendly, indicate that this appointment is to substitute for your in-class participation on the date you missed.

If you need to miss more than 1-2 classes for illness, I reserve the right to require documentation from Disability Services or a medical provider. 

#### Inclement Weather

If in-person classes are canceled, you will be notified of the instructional continuity plan for this class by Canvas Announcement. 
In most circumstances where there is power in the Lincoln area, we will hold class via Zoom if the university cancels class. 
You will be held to the same participation standards on Zoom as you are in person, and participation and attendance will be graded accordingly, with some allowance for disruption at the individual level where circumstances warrant. 


### Projects

#### Late Projects



## Expectations

You can expect me to:

- reply to emails within 48 hours during the week (72 hours on weekends)
- be available in class to assist with assignments
- be available by appointment for additional help or discussion

I expect you to:

- Read the module material and homework assignment before coming to class
- Engage with the material and your classmates during class
- Seek help when you do not understand the material
- Communicate promptly if you anticipate that you will have trouble meeting deadlines or participating in a portion of the course.
- Do your own troubleshooting before contacting me for help (and mention things you've already tried when you do ask for help!)
- Be respectful and considerate of everyone in the class

### Make Mistakes!

Programming is the process of making a series of silly or stupid mistakes, and then slowly fixing each mistake (while potentially adding a few more). The only way to know how to fix these mistakes (and avoid them in the future) is to make them. (Sometimes, you have to make the same mistake a few dozen times before you can avoid it in the future). At some point during the class, you will find that you've spent 30 minutes staring at an error caused by a typo, a space, or a parenthesis in the wrong place. You may ask for help debugging this weird error, only to have someone immediately point out the problem... it is always easier to see these things in someone else's code. This is part of programming, it is normal, and you shouldn't feel embarrassed or sorry (unless you put no effort into troubleshooting the problem before you asked for help).

If you manage to produce an error I haven't seen before, then congratulations. You have achieved something special, and that achievement should be celebrated. Each new and bizarre error is an opportunity to learn a bit more about the programming language, the operating system, or the interaction between the two.


### Evaluation Criteria

In every assignment, discussion, and written component of this class, you are expected to **demonstrate that you are intellectually engaging with the material**.
I will evaluate you based on this engagement, which means that technically correct but low effort answers which do not demonstrate engagement or understanding will receive no credit.

When you answer questions in this class, your goal is to show that you either understand the material or are actively engaging with it. 
If you did not achieve this goal, then your answer is incomplete, regardless of whether or not it is technically correct. 
This is not to encourage you to add unnecessary complexity to your answer - simple, elegant solutions are always preferable to unwieldy, complex solutions that accomplish the same task.

Grammar and spelling are important, as is your ability to communicate technical information clearly in a written format; both of these criteria will be used in addition to assignment-specific rubrics to evaluate your work.

### Academic Integrity and Class Conduct

You will be engaging with your classmates and me through in-person discussions and collaborative activities. 
It is expected that everyone will engage in these interactions civilly and in good faith. 
Discussion and disagreement are important parts of the learning process, but it is important that mutual respect prevail. 
Individuals who detract from an atmosphere of civility and respect will be removed from the conversation or the classroom.

Students are expected to adhere to guidelines concerning academic dishonesty outlined in [Article III B.1 of the University's Student Code of Conduct](http://stuafs.unl.edu/dos/code). The Statistics Department [academic integrity and grade appeal policy is available here](https://statistics.unl.edu/grade-appeals-and-academic-integrity-policy).

### Code

You must be able to explain how the logic works for any code you turn in. 
This means that code you obtained from e.g. StackOverflow is fine to use if you can explain it and modify it for the purposes of this class, but if you cannot explain your code you will not get credit for the assignment. 
This is in line with what is generally considered acceptable behavior in programming - reuse is fine (subject to the code's license) but you must be able to fully explain and modify any code you did not write yourself.
You should also provide a link to the source of your code (or even the logic behind your code) - this is useful both for my information and for future you, in addition to being a good way to give attribution to the original author. 


### AI and Explainability Policy

**Any use of generative AI must be disclosed** in an appendix to your submission - this includes brainstorming, editing, using AI as spell-check/grammar-check, and so on. You must document the following:

-   the version of the generative AI used
-   the full sequence of prompts and responses
-   any additional inputs you provided to the AI system
-   a "diff" between the AI responses and your submission, showing exactly what was generated by the AI system and what you changed. 

It may be useful to leverage AI tools to ensure that your work conforms to grammar and style guidelines, but I very highly discourage the use of generative AI for content or code.

- **Oral Exam Policy** - I may replace the grade on any written assignment with a graded oral exam on your submission. This policy is not intended to be punitive -- it may be used to resolve issues where question wording was not clear or was misinterpreted. Rather, it is intended to be used to assess what you actually know when I suspect that the written assignment is not a good measure of your knowledge or skills. 

- You must be able to explain any work you turn in. If you cannot explain the logic behind your approach as well as how it works in practice, then you will not receive credit for your submission. 


# Required University Information

See https://executivevc.unl.edu/academic-excellence/teaching-resources/course-policies.
